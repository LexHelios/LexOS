replicaCount: 3

image:
  repository: your-registry/lexcommand-frontend
  tag: latest
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: lexcommand.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: lexcommand-tls
      hosts:
        - lexcommand.example.com

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - lexcommand-frontend
        topologyKey: kubernetes.io/hostname

env:
  REACT_APP_API_URL: https://api.lexcommand.example.com
  REACT_APP_SENTRY_DSN: ""
  REACT_APP_ALLOWED_ORIGINS: https://lexcommand.example.com

configMap:
  nginx.conf: |
    server {
      listen 80;
      server_name localhost;
      root /usr/share/nginx/html;
      index index.html;

      location / {
        try_files $uri $uri/ /index.html;
      }

      location /health {
        access_log off;
        return 200 'healthy\n';
      }
    } 